{"version":3,"sources":["auth/AuthContext.js","types/types.js","components/login/LoginScreen.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHerosByPublisher.js","components/dc/DcScreen.js","components/heroes/HeroScreen.js","selectors/getHeroById.js","components/marvel/MarvelScreen.js","hooks/useForm.js","components/search/SearchScreen.js","selectors/getHeroesByName.js","components/ui/Navbar.js","routers/DashboardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","auth/authReducer.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","localStorage","getItem","type","payload","name","replace","heroes","HeroCard","id","superhero","alter_ego","publisher","first_appearance","characters","style","maxWidth","src","alt","to","HeroList","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","key","DcScreen","HeroScreen","heroId","useParams","find","getHeroById","length","split","push","goBack","MarvelScreen","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","value","SearchScreen","location","useLocation","queryString","parse","search","q","heroesFiltered","toLowerCase","onSubmit","e","preventDefault","onChange","placeholder","autoComplete","Navbar","user","useHistory","activeClassName","exact","DashboardRoutes","path","component","PrivateRoute","isAuthenticated","Component","rest","setItem","pathname","props","PublicRoute","AppRouter","logged","authReducer","state","action","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.234cfd96.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AuthContext = createContext();","export const types = {\n    login: '[auth] login',\n    logout: '[auth] logout'\n}","import React, { useContext } from 'react';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\n\n\nexport const LoginScreen = ({ history }) => {\n\n    const { dispatch } = useContext(AuthContext);\n\n    const handleLogin = () => {\n        //console.log(user);\n        //history.push('/');\n        \n\n        const lastPath = localStorage.getItem('lastPath') || '/'\n\n        dispatch({\n            type: types.login,\n            payload: {\n                name: 'Iván'\n            }\n        })\n\n        // Evita que una vez loegueado si se quiere hacer un \"atrás\" en el navegador vaya hacia el login nuevamente\n        history.replace(lastPath);\n\n\n    }\n\n\n    return (\n        <div className=\"container mt-5\">\n            <h1>Login</h1>\n            <hr />\n\n            <button\n                className=\"btn btn-primary\"\n                onClick={ handleLogin }\n            >\n                Ingresar\n            </button>\n        </div>\n    )\n}","export const heroes = [\n    {\n        'id': 'dc-batman',\n        'superhero':'Batman', \n        'publisher':'DC Comics', \n        'alter_ego':'Bruce Wayne',\n        'first_appearance':'Detective Comics #27',\n        'characters':'Bruce Wayne'\n    },\n    {\n        'id': 'dc-superman',\n        'superhero':'Superman', \n        'publisher':'DC Comics', \n        'alter_ego':'Kal-El',\n        'first_appearance':'Action Comics #1',\n        'characters':'Kal-El'\n    },\n    {\n        'id': 'dc-flash',\n        'superhero':'Flash', \n        'publisher':'DC Comics', \n        'alter_ego':'Jay Garrick',\n        'first_appearance':'Flash Comics #1',\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\n    },\n    {\n        'id': 'dc-green',\n        'superhero':'Green Lantern', \n        'publisher':'DC Comics', \n        'alter_ego':'Alan Scott',\n        'first_appearance':'All-American Comics #16',\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\n    },\n    {\n        'id': 'dc-arrow',\n        'superhero':'Green Arrow', \n        'publisher':'DC Comics', \n        'alter_ego':'Oliver Queen',\n        'first_appearance':'More Fun Comics #73',\n        'characters':'Oliver Queen'\n    },\n    {\n        'id': 'dc-wonder',\n        'superhero':'Wonder Woman', \n        'publisher':'DC Comics', \n        'alter_ego':'Princess Diana',\n        'first_appearance':'All Star Comics #8',\n        'characters':'Princess Diana'\n    },\n    {\n        'id': 'dc-martian',\n        'superhero':'Martian Manhunter', \n        'publisher':'DC Comics', \n        'alter_ego':'J\\'onn J\\'onzz',\n        'first_appearance':'Detective Comics #225',\n        'characters':'Martian Manhunter'\n    },\n    {\n        'id': 'dc-robin',\n        'superhero':'Robin/Nightwing', \n        'publisher':'DC Comics', \n        'alter_ego':'Dick Grayson',\n        'first_appearance':'Detective Comics #38',\n        'characters':'Dick Grayson'\n    },\n    {\n        'id': 'dc-blue',\n        'superhero':'Blue Beetle', \n        'publisher':'DC Comics', \n        'alter_ego':'Dan Garret',\n        'first_appearance':'Mystery Men Comics #1',\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\n    },\n    {\n        'id': 'dc-black',\n        'superhero':'Black Canary', \n        'publisher':'DC Comics', \n        'alter_ego':'Dinah Drake',\n        'first_appearance':'Flash Comics #86',\n        'characters':'Dinah Drake, Dinah Lance'\n    },\n    {\n        'id': 'marvel-spider',\n        'superhero':'Spider Man', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Peter Parker',\n        'first_appearance':'Amazing Fantasy #15',\n        'characters':'Peter Parker'\n    },\n    {\n        'id': 'marvel-captain',\n        'superhero':'Captain America', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Steve Rogers',\n        'first_appearance':'Captain America Comics #1',\n        'characters':'Steve Rogers'\n    },\n    {\n        'id': 'marvel-iron',\n        'superhero':'Iron Man', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Tony Stark',\n        'first_appearance':'Tales of Suspense #39',\n        'characters':'Tony Stark'\n    },\n    {\n        'id': 'marvel-thor',\n        'superhero':'Thor', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Thor Odinson',\n        'first_appearance':'Journey into Myster #83',\n        'characters':'Thor Odinson'\n    },\n    {\n        'id': 'marvel-hulk',\n        'superhero':'Hulk', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Bruce Banner',\n        'first_appearance':'The Incredible Hulk #1',\n        'characters':'Bruce Banner'\n    },\n    {\n        'id': 'marvel-wolverine',\n        'superhero':'Wolverine', \n        'publisher':'Marvel Comics', \n        'alter_ego':'James Howlett',\n        'first_appearance':'The Incredible Hulk #180',\n        'characters':'James Howlett'\n    },\n    {\n        'id': 'marvel-daredevil',\n        'superhero':'Daredevil', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Matthew Michael Murdock',\n        'first_appearance':'Daredevil #1',\n        'characters':'Matthew Michael Murdock'\n    },\n    {\n        'id': 'marvel-hawkeye',\n        'superhero':'Hawkeye', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Clinton Francis Barton',\n        'first_appearance':'Tales of Suspense #57',\n        'characters':'Clinton Francis Barton'\n    },\n    {\n        'id': 'marvel-cyclops',\n        'superhero':'Cyclops', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Scott Summers',\n        'first_appearance':'X-Men #1',\n        'characters':'Scott Summers'\n    },\n    {\n        'id': 'marvel-silver',\n        'superhero':'Silver Surfer', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Norrin Radd',\n        'first_appearance':'The Fantastic Four #48',\n        'characters':'Norrin Radd'\n    }\n]","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n//import heroes from '../../../public/assets/heroes/heroes/'\nexport const HeroCard = ({\n    id,\n    superhero, \n    publisher, \n    alter_ego,\n    first_appearance,\n    characters\n}) => {\n    return (\n        <div className=\"card ms-3\" style={ { maxWidth: 540 } }>\n            <div className=\"row no-gutters\">\n                <div className=\"col-md-4\">\n                    <img className=\"card-img\" src={`./assets/heroes/${id}.jpg`} alt={ superhero } />\n\n                </div>\n\n                <div className=\"col-md-8\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">\n                            { superhero }\n                        </h5>\n\n                        <p className=\"card-text\">\n                            { alter_ego }\n                        </p>\n\n                        {\n                            (alter_ego !== characters) && \n                                <p className=\"card-text\">\n                                    { characters }\n                                </p>\n                        }\n\n                        <p className=\"card-text\">\n                            <small className=\"text-muted\">\n                                { first_appearance }\n                            </small>\n                        </p>\n\n                        <Link to={`./hero/${ id }`}>\n                            Más...\n                        </Link>\n\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { useMemo } from 'react';\nimport { getHeroesByPublisher } from '../../selectors/getHerosByPublisher';\nimport { HeroCard } from './HeroCard';\n\n\nexport const HeroList = ({ publisher }) => {\n\n    //const heroes = getHeroesByPublisher(publisher);\n\n    const heroes = useMemo(() => getHeroesByPublisher(publisher), [ publisher ]);\n\n    return (\n        <div className=\"card-columns animate__animated animate__fadeIn\">\n            {\n                heroes.map( hero => (\n                    // con { ...hero } le paso todos los parametros desestructurados al componente\n                    <HeroCard key={ hero.id } { ...hero } />\n                ))\n            }\n        </div>\n    )\n};","import { heroes } from \"../data/heroes\";\n\nexport const getHeroesByPublisher = (publisher) => {\n\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\n\n    if (!validPublishers.includes(publisher)) {\n        throw new Error(`Publisher \"${ publisher }\" no es correcto`);\n    }\n\n\n    return heroes.filter( hero => hero.publisher === publisher );\n}","import React from 'react';\nimport { HeroList } from '../heroes/HeroList';\n\nexport const DcScreen = () => {\n    return (\n        <div>\n            <h1>DcScreen</h1>\n            \n            <hr />\n\n            <HeroList publisher=\"DC Comics\" />\n\n        </div>\n    )\n}","import React, { useMemo } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { getHeroById } from '../../selectors/getHeroById';\n\nexport const HeroScreen = ( { history } ) => {\n\n    const { heroId } = useParams();\n\n    //const hero = getHeroById(heroId);\n\n    const hero = useMemo(() => getHeroById(heroId), [ heroId ]);\n\n    if (!hero) {\n        return <Redirect to=\"/\" />\n    }\n\n    const {\n        id,\n        superhero, \n        publisher, \n        alter_ego,\n        first_appearance,\n        characters\n    } = hero;\n\n    const handleReturn = () => {\n\n        if (history.length <= 2) {\n            const publisher = id.split('-')[0]; \n\n            history.push(`/${publisher}`);\n        } else {\n            history.goBack();\n        }\n        \n    }\n\n    return (\n        <div className=\"row mt-5\">\n            <div className=\"col-4\">\n                <img className=\"img-thumbnail animate__animated animate__fadeInLeft\" src={ `../assets/heroes/${ id }.jpg`} alt={ superhero }/>\n            </div>\n\n            <div className=\"col-8\">\n                <h3> { superhero } </h3>\n\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item\">\n                        <b> Alter ego: </b> { alter_ego }\n                    </li>\n\n                    <li className=\"list-group-item\">\n                        <b> Publisher: </b> { publisher }\n                    </li>\n\n                    <li className=\"list-group-item\">\n                        <b> First appearance: </b> { first_appearance }\n                    </li>\n\n\n                </ul>\n\n                <h5> Characters </h5>\n\n                <p> { characters } </p>\n\n                <button\n                    className=\"btn btn-outline-info\"\n                    onClick={ handleReturn }\n                >\n                    Return\n                </button>\n            </div>\n        </div>\n\n        \n    )\n}\n","import { heroes } from \"../data/heroes\";\n\nexport const getHeroById = (id) => {\n\n    return heroes.find( hero => hero.id === id );\n\n}","import React from 'react';\nimport { HeroList } from '../heroes/HeroList';\n\nexport const MarvelScreen = () => {\n    return (\n        <div>\n            <h1>MarvelScreen</h1>\n\n            <hr />\n\n            <HeroList publisher=\"Marvel Comics\" />\n        </div>\n    )\n}","import { useState } from 'react';\n\nconst useForm = (initialState = {}) => {\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState);\n    }\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [target.name]: target.value\n        })\n    }\n\n    return [values, handleInputChange, reset];\n}\n\nexport default useForm;","import React, { useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport queryString from 'query-string';\nimport useForm from '../../hooks/useForm';\nimport { HeroCard } from '../heroes/HeroCard';\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\n\nexport const SearchScreen = ({ history }) => {\n\n    const location = useLocation();\n\n    const { q = '' } = queryString.parse(location.search);\n\n    const [{ search }, handleInputChange] = useForm({\n        search: q\n    });\n\n    const heroesFiltered =  useMemo(() => getHeroesByName(q), [q]);\n   \n    //const heroesFiltered = getHeroesByName(search)\n\n    const handleSearch = (e) => {\n\n        e.preventDefault();\n\n        // if (search.trim().length <= 1) {\n        //     return;\n        // }\n\n        history.push(`?q=${ search }`);\n\n    }\n\n    return (\n        <div>\n            <h1>SearchScreen</h1>\n\n            <hr/>\n\n            <div className=\"row\">\n\n                <div className=\"col-5\">\n\n                    <h4> Search Form </h4>\n\n                    <hr />\n\n                    <form onSubmit={ handleSearch }>\n\n                        <input\n                            onChange={ handleInputChange }\n                            type=\"text\"\n                            placeholder=\"Find your hero\"\n                            className=\"form-control\"\n                            name=\"search\"\n                            value={ search }\n                            autoComplete=\"off\"\n                        />\n\n                        <button\n                            type=\"submit\"\n                            className=\"btn m-1 btn-block btn-outline-primary\"\n                        >\n                            Search...\n                        </button>\n                    </form>\n                </div>\n\n                <div className=\"col-7 \">\n\n                    <h4>Results</h4>\n\n                    <hr />\n\n                    {\n                        (q === '') &&\n                            <div className=\"alert alert-info\">\n                                Search a hero\n                            </div>\n                    }\n\n                    {\n                        (q !== '' && !heroesFiltered.length) &&\n                            <div className=\"alert alert-danger\">\n                                There is not a hero with { q }\n                            </div>\n                    }   \n\n                    \n                    {\n                        heroesFiltered.map( hero => (\n                            <HeroCard \n                                key={ hero.id }\n                                { ...hero }\n                            />\n                        ))\n                    }\n                        \n\n                    \n\n\n                </div>\n\n            </div>\n        </div>\n    )\n}\n","import { heroes } from \"../data/heroes\";\n\n\nexport const getHeroesByName = (name) => {\n\n    if (name === '') {\n        return [];\n    }\n\n    return heroes.filter( hero => hero.superhero.toLowerCase().includes(name.toLowerCase()) );\n\n}","import React, { useContext } from 'react';\nimport { Link, NavLink, useHistory } from 'react-router-dom';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\nexport const Navbar = () => {\n\n    const { user: { name }, dispatch } = useContext(AuthContext);\n\n    const history = useHistory()\n\n\n    const handleLogout = () => {        \n\n        dispatch({\n            type: types.logout\n        });\n\n        history.replace('/login');\n        \n    }\n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            \n            <Link \n                className=\"navbar-brand\" \n                to=\"/\"\n            >\n                Asociaciones\n            </Link>\n\n            <div className=\"navbar-collapse\">\n                <div className=\"navbar-nav\">\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/marvel\"\n                    >\n                        Marvel\n                    </NavLink>\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/dc\"\n                    >\n                        DC\n                    </NavLink>\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/search\"\n                    >\n                        Search\n                    </NavLink>\n                </div>\n            </div>\n\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n                <ul className=\"navbar-nav ml-auto\">\n                    \n                    <span className=\"nav-item nav-link text-info\">\n                        { name }\n                    </span>\n                    \n                    <button \n                        onClick={ handleLogout }\n                        className=\"nav-item nav-link btn\" \n                    >\n                        Logout\n                    </button>\n                </ul>\n            </div>\n        </nav>\n    )\n}","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { DcScreen } from '../components/dc/DcScreen';\nimport { HeroScreen } from '../components/heroes/HeroScreen';\nimport { MarvelScreen } from '../components/marvel/MarvelScreen';\nimport { SearchScreen } from '../components/search/SearchScreen';\nimport { Navbar } from '../components/ui/Navbar';\n\nexport const DashboardRoutes = () => {\n    return (\n        <>\n            <Navbar />\n\n            <div className=\"container\">\n                <Switch>\n                    <Route exact path=\"/marvel\" component={ MarvelScreen } />\n                    <Route exact path=\"/hero/:heroId\" component={ HeroScreen } />\n                    <Route exact path=\"/dc\" component={ DcScreen } />\n                    <Route exact path=\"/search\" component={ SearchScreen } />\n\n                    <Redirect to=\"/marvel\" />\n                </Switch>    \n            </div>          \n        </>\n    )\n};","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    localStorage.setItem('lastPath', rest.location.pathname)\n\n\n    return (\n        <Route \n            { ...rest }\n\n            component={ (props) => (\n\n                (isAuthenticated) \n                ? (<Component { ...props } />)\n\n                : (<Redirect to=\"/login\" />)\n\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route \n            { ...rest }\n\n            component={ (props) => (\n\n                (!isAuthenticated) \n                ? (<Component { ...props } />)\n\n                : (<Redirect to=\"/\" />)\n\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useContext } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch\n} from 'react-router-dom';\nimport { AuthContext } from '../auth/AuthContext';\nimport { LoginScreen } from '../components/login/LoginScreen';\nimport { DashboardRoutes } from './DashboardRoutes';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n\n    const { user } = useContext(AuthContext);\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n\n                    <PublicRoute \n                        isAuthenticated={ user.logged } \n                        component={ LoginScreen } \n                        exact \n                        path=\"/login\" \n                    />\n\n                    <PrivateRoute \n                        isAuthenticated={ user.logged } \n                        component={ DashboardRoutes } \n                        path=\"/\" \n                    />\n                        \n                </Switch>\n            </div>\n        </Router>\n    )\n}","import { types } from \"../types/types\";\n\n// const state = {\n//     name: 'Ivan',\n//     logged: true\n// } \n\nexport const authReducer = (state = {}, action) => {\n\n    switch (action.type) {\n        case types.login:\n            return {\n                ...action.payload,\n                logged: true\n            }\n    \n        case types.logout:\n            return {\n                logged: false\n            }\n\n        default:\n            return state;\n    }\n\n}","import React, { useEffect, useReducer } from 'react';\nimport { AppRouter } from './routers/AppRouter';\nimport 'animate.css';\nimport { AuthContext } from './auth/AuthContext';\nimport { authReducer } from './auth/authReducer';\n\nconst init = () => {\n    return JSON.parse(localStorage.getItem('user')) || { logged: false }\n}\n\nconst HeroesApp = () => {\n\n    const [user, dispatch] = useReducer(authReducer, {}, init);\n\n    useEffect(() => {\n\n        localStorage.setItem('user', JSON.stringify(user));\n\n    }, [ user ]);\n\n    return (\n        <AuthContext.Provider value={{\n            user,\n            dispatch\n        }}>\n            <AppRouter />\n        </AuthContext.Provider>\n        \n    )\n}\n\nexport default HeroesApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport HeroesApp from './HeroesApp';\n\nReactDOM.render(\n    <HeroesApp />,\n  \tdocument.getElementById('root')\n);"],"sourceRoot":""}